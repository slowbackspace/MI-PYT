{
  "name": "Pygithub-labeler",
  "tagline": "",
  "body": "# pygithub-labeler\r\nMagically (and with the power of regular expressions) attach labels to your github repository issues.\r\n\r\nhttp://slowbackspace.github.io/pygithub-labeler/\r\n\r\n**Webhook Setup:**  \r\nGithub\r\n- Go to you repository's settings -> Webhooks -> Add webhook  \r\n- In the Payload URL field, write your-domain/hook\r\n- Select Content Type application/json\r\n- In the Secret field, write a secure random string\r\n- Select events that will trigger this webhook. pygithub-labeler supports Issues, Issue comment and Pull request events.\r\n- Click on \"Add webhook\"\r\n\r\npygithub-labeler\r\n- Put your secret string into the env variable called \"webhook_token\"\r\n- Start a web server via `python3 run.py web` or `./start_gunicorn.sh` \r\n  \r\nFor more information about webhooks visit <a href=\"https://developer.github.com/webhooks/\">https://developer.github.com/webhooks/</a><br>\r\n\r\n**Env variables:**  \r\nPORT - port of the web server  \r\nDEBUG - Enable/disable debug mode (true/false)  \r\nwebhook_token - Secret token for a webhook\r\n\r\n```\r\nUsage: run.py [OPTIONS] COMMAND [ARGS]...\r\n\r\nOptions:\r\n  --authconfig TEXT   Configuration file. Default auth.cfg\r\n  --repo TEXT         Repository in 'owner/name' format. Default\r\n                      slowbackspace/testrepo\r\n  --scope TEXT        Scope - issue_body, issue_comments, pull_requests, all.\r\n                      Default all\r\n  --rules TEXT        Rules configuration file\r\n  --interval INTEGER  Interval [seconds]. Default 5\r\n  --label TEXT        Fallback label. Default wonfix\r\n  --help              Show this message and exit\r\n\r\nCommands:\r\n  console  Run the cli app\r\n  web      Run the web app\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}